// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["extendedWhereUnique"]
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id    String   @id @default(uuid())
  plays Player[]

  secret String @unique
}

// enum Role {
// GAME_MASTER
// PLAYER
// }

// enum State {
// SETUP
// LOCKED
// RUNNING
// DONE
// }

model Player {
  room         Bingo       @relation(references: [code], fields: [roomCode])
  roomCode     String
  user         User        @relation(references: [secret], fields: [userSecret])
  userSecret   String
  name         String
  color        String      @default("red")
  avatar       String      @default("/wolf_64.png")
  role         String      @default("PLAYER")
  board        BoardTile[]
  createdTiles Tile[]

  @@id([roomCode, userSecret])
}

model BoardTile {
  tile             Tile   @relation(fields: [tileId], references: [id])
  id               Int    @id @default(autoincrement())
  player           Player @relation(fields: [playerRoomCode, playerUserSecret], references: [roomCode, userSecret])
  tileId           String
  playerRoomCode   String
  playerUserSecret String

  @@unique([playerRoomCode, playerUserSecret, tileId]) // no duplicate tiles for user
}

model Tile {
  id               String      @id @default(uuid())
  content          String
  isComplete       Boolean     @default(false)
  boards           BoardTile[]
  author           Player      @relation(fields: [roomCode, userSecret], references: [roomCode, userSecret])
  roomCode   String
  userSecret String
}

model Bingo {
  code    String   @id
  name    String
  state   String   @default("SETUP")
  players Player[]


  @@map("Room")
}
